<?php

/**
 * @file
 * Module code for Islandora Digital Workflow module.
 */

// Taxonomy Vocabulary
define('IDW_STAGE_TAXONOMY_MACHINE_NAME', 'workflow_stage_vocab');
define('IDW_CONTENT_TYPE_TAXONOMY_MACHINE_NAME', 'workflow_content_type_vocab');

// Permissions -- NOTE: there are additional permission constants defined in
// islandora_digital_workflow_permission that use the naming convention of
// 'ISLANDORA_DIGITAL_WORKFLOW_' . strtoupper($model_name) - for which a helper
// in includes/access_permissions.inc named
// islandora_digital_workflow_permission_name_of_model() will do.
define('ISLANDORA_DIGITAL_WORKFLOW', 'digital workflow access');
define('ISLANDORA_DIGITAL_WORKFLOW_CREATE_NEW_BATCH', 'digital workflow create batches');
define('ISLANDORA_DIGITAL_WORKFLOW_VIEW_TRANSACTIONS', 'digital workflow view transactions');
define('ISLANDORA_DIGITAL_WORKFLOW_UPDATE_ITEMS', 'digital workflow update items');

/**
 * Implements hook_menu().
 */
function islandora_digital_workflow_menu() {
  return array(
    'admin/islandora/islandora_digital_workflow' => array(
      'title' => 'Islandora Digital Workflow',
      'description' => 'Settings for the Islandora Digital Workflow module.',
      'type' => MENU_NORMAL_ITEM,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_digital_workflow_admin_form'),
      'access arguments' => array(ISLANDORA_DIGITAL_WORKFLOW),
      'file' => 'includes/admin.form.inc',
    ),
    'islandora/islandora_digital_workflow' => array(
      'title' => t('Islandora Digital Workflow Dashboard'),
      'type' => MENU_NORMAL_ITEM,
      'page callback' => array('islandora_digital_workflow_dashboard'),
      'access arguments' => array(ISLANDORA_DIGITAL_WORKFLOW),
      'file' => 'includes/dashboard.form.inc',
    ),
    // Lookup form
    'islandora/islandora_digital_workflow/lookup' => array(
      'page callback' => array('islandora_digital_workflow_lookup'),
      'type' => MENU_LOCAL_TASK,
      'access arguments' => array(ISLANDORA_DIGITAL_WORKFLOW),
      'file' => 'includes/lookup.form.inc',
    ),
    // Lookup submit handler - performs search, redirects if finds only one
    // result, else displays the lookup results.
    'islandora/islandora_digital_workflow/lookup/%' => array(
      'title' => t('Islandora Digital Workflow Search'),
      'type' => MENU_LOCAL_TASK,
      'page callback' => array('islandora_digital_workflow_lookup_form_submit'),
      'page arguments' => array(3),
      'access arguments' => array(ISLANDORA_DIGITAL_WORKFLOW),
      'file' => 'includes/lookup.form.inc',
    ),
    'islandora/islandora_digital_workflow/create_batch' => array(
      'title' => t('Islandora Digital Workflow - Create Batch'),
      'type' => MENU_NORMAL_ITEM,
      'page callback' => array('islandora_digital_workflow_create_batch'),
      'access arguments' => array(ISLANDORA_DIGITAL_WORKFLOW_CREATE_NEW_BATCH),
      'file' => 'includes/create_batch.form.inc',
    ),
    'islandora/islandora_digital_workflow/edit_batch/%' => array(
      'title' => t('Islandora Digital Workflow - Edit Batch'),
      'type' => MENU_NORMAL_ITEM,
      'page callback' => array('islandora_digital_workflow_create_batch'),
      'access arguments' => array(ISLANDORA_DIGITAL_WORKFLOW),
      'file' => 'includes/create_batch.form.inc',
    ),
    'islandora/islandora_digital_workflow/delete_batch/%' => array(
      'title' => t('Islandora Digital Workflow - Delete Batch'),
      'type' => MENU_NORMAL_ITEM,
      'page callback' => array('islandora_digital_workflow_delete_batch'),
      'access arguments' => array(ISLANDORA_DIGITAL_WORKFLOW),
      'file' => 'includes/delete_batch.form.inc',
    ),
    // Node enhancement functions
    'node/%node/batch' => array(
      'title' => 'Edit Batch Record',
      'page callback' => 'islandora_digital_workflow_batch',
      'page arguments' => array(1),
      'access callback' => 'islandora_digital_workflow_access_node',
      'access arguments' => array(ISLANDORA_DIGITAL_WORKFLOW, 1),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/batch.form.inc',
      'weight' => 89,
    ),
    'node/%node/files' => array(
      'title' => 'Batch Files',
      'page callback' => 'islandora_digital_workflow_files',
      'page arguments' => array(1),
      'access callback' => 'islandora_digital_workflow_access_node',
      'access arguments' => array(ISLANDORA_DIGITAL_WORKFLOW, 1),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/files.form.inc',
      'weight' => 90,
    ),
    'node/%node/items' => array(
      'title' => 'Batch Items',
      // arguments are handled in islandora_digital_workflow_batch_items
      // with arg(1).
      'page callback' => 'islandora_digital_workflow_batch_items',
      'access callback' => 'islandora_digital_workflow_access_node',
      'access arguments' => array(ISLANDORA_DIGITAL_WORKFLOW, 1),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/items.form.inc',
      'weight' => 90,
    ),
    'node/%node/item/%' => array(
      'title' => 'Batch Item',
      'page callback' => 'islandora_digital_workflow_items_view_item',
      'page arguments' => array(1, 3),
      'access callback' => 'islandora_digital_workflow_access_node',
      'access arguments' => array(ISLANDORA_DIGITAL_WORKFLOW, 1),
      'file' => 'includes/item.form.inc',
      'weight' => 90,
    ),
    'node/%node/transactions' => array(
      'title' => 'Transactions',
      'page callback' => 'islandora_digital_workflow_batch_transactions',
      // arguments are handled in islandora_digital_workflow_batch_items
      // with arg(1).
      'access callback' => 'islandora_digital_workflow_access_node',
      'access arguments' => array(ISLANDORA_DIGITAL_WORKFLOW_VIEW_TRANSACTIONS, 1),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/transactions.form.inc',
      'weight' => 90,
    ),
  );
}

/**
 * Implements hook_permission().
 */
function islandora_digital_workflow_permission() {
  module_load_include('inc', 'islandora_digital_workflow', 'includes/utilities');
  module_load_include('inc', 'islandora_digital_workflow', 'includes/access_permissions');
  $static_permissions = array(
    ISLANDORA_DIGITAL_WORKFLOW => array(
      'title' => t('Use the Islandora Digital Workflow system.'),
      'description' => t('User can access and use the Islandora Digital Workflow system.'),
    ),
    ISLANDORA_DIGITAL_WORKFLOW_CREATE_NEW_BATCH => array(
      'title' => t('Create new digital workflow batches.'),
      'description' => t('User can create new batches within the Islandora Digital Workflow system.'),
    ),
    ISLANDORA_DIGITAL_WORKFLOW_VIEW_TRANSACTIONS => array(
      'title' => t('View Batch Transactions'),
      'description' => t('User can view batch transaction details'),
    ),
    ISLANDORA_DIGITAL_WORKFLOW_UPDATE_ITEMS => array(
      'title' => t('Update Batch Items'),
      'description' => t('User can update batch items details'),
    ),
  );
  $model_based_permissions = array();
  $models = islandora_digital_workflow_get_reduced_readable_cmodels();

  foreach ($models as $cmodel => $model) {
    $permission_define_name = islandora_digital_workflow_permission_constant_name_of_model($cmodel);
    $permission = islandora_digital_workflow_permission_of_model($cmodel);
    if (!defined($permission_define_name)) {
      define($permission_define_name, $permission);
    }
    $model_based_permissions[$permission] = array(
      'title' => 'Create/Edit/Update ' . $model . ' batches',
      'description' => 'User can perform tasks related to the ' . $model . ' objects within the Islandora Digital Workflow system',
    );
  }
  return array_merge($static_permissions, $model_based_permissions);
}

/**
 * Implements hook_preprocess_theme().
 *
 * This code will remove the sidebar and must check to see whether or not the path is on a user page.
 */
function islandora_digital_workflow_preprocess_html(&$vars) {
  $path = drupal_get_path('module', 'islandora_digital_workflow');
  $item = menu_get_item();
  if (is_array($item)) {
    $public_files_path = drupal_realpath('public://');
    drupal_add_css($path . '/css/islandora_digital_workflow.css');
    // Just the admin form needs the /js/admin_form.js added.
    if ($item['path'] == 'admin/islandora/islandora_digital_workflow') {
      drupal_add_js($path . '/js/admin_form.js');
    }
  }
}

/**
 * Implements hook_theme()
 */
function islandora_digital_workflow_theme() {
  return array(
    'islandora_digital_workflow_dashboard' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora-digital-workflow-dashboard',
      'variables' => array(
        'dashboard_data' => NULL,
        'links' => array(),
      ),
    ),
    'islandora_digital_workflow_batch_defaults' => array(
      'template' => 'theme/islandora-digital-workflow-batch-defaults',
      'variables' => array(
        'islandora_digital_workflow_batch' => NULL,
      ),
    ),
    'islandora_digital_workflow_lookup' => array(
      'template' => 'theme/islandora-digital-workflow-findobject-form',
      'variables' => array(
        'searchterm' => NULL,
      )
    ),
    'islandora_digital_workflow_lookup_results' => array(
      'template' => 'theme/islandora-digital-workflow-lookup-results',
      'variables' => array(
        'batch_records' => array(),
        'results_count' => 0,
        'searchterm' => NULL,
        'matched_csv_only' => FALSE,
      ),
    ),
    'islandora_digital_workflow_files' => array(
      'template' => 'theme/islandora-digital-workflow-files',
      'variables' => array(
        'batch_record' => array(),
        'batch_path' => '',
        'item_file_records' => array(),
        'scanned_files' => array(),
        'table_title' => '',
        'node' => NULL,
        'table_description' => '',
      ),
    ),
      /*
    'islandora_digital_workflow_items' => array(
      'template' => 'theme/islandora-digital-workflow-items',
      'variables' => array(
        'batch_record' => array(),
        'item_records' => array(),
        'table_title' => '',
        'node' => NULL,
        'table_description' => '',
      ),
    ),
      */
    'islandora_digital_workflow_item' => array(
      'template' => 'theme/islandora-digital-workflow-item',
      'variables' => array(
        'batch_record' => array(),
        'item' => array(),
        'can_update' => FALSE,
        'item_record_transactions' => array(),
      ),
    ),
    'islandora_digital_workflow_batch_records_table' => array(
      'template' => 'theme/islandora-digital-workflow-batch-records-table',
      'variables' => array(
        'batch_records' => array(),
        'table_title' => '',
        'table_description' => '',
      ),
    ),
    'islandora_digital_workflow_transactions' => array(
      'template' => 'theme/islandora-digital-workflow-transactions',
      'variables' => array(
        'batch_record' => array(),
        'transaction_records' => array(),
        'table_title' => '',
        'table_description' => '',
      ),
    ),
  );
}

/**
 * Hook for hook_node_update.
 *
 * To display all of the related islandora_digital_workflow_batch1 record's
 * values on the Node page, this code will update the field_batch_defaults
 * field with the values from the batch record so that all of those do not
 * need to be CCK fields.
 */
function islandora_digital_workflow_node_update($node) {
  global $system_creating_nodes;
  if (!$system_creating_nodes) {
    module_load_include('inc', 'islandora_digital_workflow', 'includes/node-utilities');
    islandora_digital_workflow_sync_node_batch_record_info($node, array(), '', FALSE);
  }
}

/**
 * Checks whether the node is a workflow_batch - and potentially whether or not
 * the user has access to this permission.
 *
 * @param string $permission
 *   Name of the permission to check.
 * @param object $node
 *   Drupal node
 * @return boolean
 *   Whether or not the user has access to the node view.
 */
function islandora_digital_workflow_access_node($permission, $node) {
  if ($node->type <> 'workflow_batch') {
    return FALSE;
  }
  else {
    return user_access($permission);
  }
}

/**
 * Implementation of hook_views_api().
 */
function islandora_digital_workflow_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'islandora_digital_workflow'),
  );
}
